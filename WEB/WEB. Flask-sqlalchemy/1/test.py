import requests

disclaimer_text = """
–ü–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —Ç–µ—Å—Ç–æ–≤ —É–±–µ–¥–∏—Ç–µ—Å—å –≤ —Ç–æ–º, —á—Ç–æ
1) –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω
2) –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –µ—Å—Ç—å –∑–∞–ø–∏—Å–∏ (–µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç, –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç add-data.py –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏)
"""
print(disclaimer_text)


# ---
response = requests.get('http://localhost:8080/api/jobs').json()
assert 'jobs' in response
assert len(response['jobs']) >= 1
print('‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–¥–∞—á')

# ---
response = requests.get('http://localhost:8080/api/jobs/1').json()
assert 'jobs' in response
assert 'id' in response['jobs']
print('‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–¥–Ω–æ–π –∑–∞–¥–∞—á–∏')

# ---
response = requests.get('http://localhost:8080/api/jobs/100500').json()
assert 'error' in response
assert response['error'] == 'Not found'
print('‚úÖ –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–µ–≤–µ—Ä–Ω–æ–º id')

# ---
response = requests.get('http://localhost:8080/api/jobs/asdf').json()
assert 'error' in response
assert response['error'] == 'Bad request'
print('‚úÖ –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ç–∏–ø–µ id')


# ---
response = requests.post('http://localhost:8080/api/jobs',
                         json={'team_leader_id': 1, 'job': 'add new job', 'work_size': 15, 'is_finished': False, 'collaborators': '2, 3'}).json()
assert 'success' in response
assert response['success'] == 'OK'
print('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –∑–∞–¥–∞—á–∏')

# ---
response = requests.post('http://localhost:8080/api/jobs',
                         json={}).json()
assert 'error' in response
assert response['error'] == 'Empty request'
print('‚úÖ –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É—Å—Ç–æ–º –∑–∞–ø—Ä–æ—Å–µ [–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏]')

# ---
response = requests.post('http://localhost:8080/api/jobs',
                         json={'job': 'add new job', 'work_size': 15, 'is_finished': False, 'collaborators': '2, 3'}).json()
assert 'error' in response
assert response['error'] == 'Bad request'
print('‚úÖ –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø–æ–ª—è team_leader [–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏]')

# ---
response = requests.post('http://localhost:8080/api/jobs',
                         json={'team_leader_id': 1,  'work_size': 15, 'is_finished': False, 'collaborators': '2, 3'}).json()
assert 'error' in response
assert response['error'] == 'Bad request'
print('‚úÖ –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø–æ–ª—è job [–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏]')


# ---
response = requests.put('http://localhost:8080/api/jobs/1',
                        json={'team_leader_id': 1, 'job': 'edited job', 'work_size': 15, 'is_finished': False, 'collaborators': '2, 3'}).json()
assert 'success' in response
assert response['success'] == 'OK'
response = requests.get('http://localhost:8080/api/jobs/1').json()
assert 'jobs' in response
assert response['jobs']['job'] == 'edited job'
print('‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏')

# ---
response = requests.put('http://localhost:8080/api/jobs/1',
                        json={'job': 'add new job', 'work_size': 15, 'is_finished': False, 'collaborators': '2, 3'}).json()
assert 'error' in response
assert response['error'] == 'Bad request'
print('‚úÖ –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø–æ–ª—è team_leader [–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏]')

# ---
response = requests.put('http://localhost:8080/api/jobs/1',
                        json={'team_leader_id': 1,  'work_size': 15, 'is_finished': False, 'collaborators': '2, 3'}).json()
assert 'error' in response
assert response['error'] == 'Bad request'
print('‚úÖ –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø–æ–ª—è job [–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏]')


# ---
response = requests.delete('http://localhost:8080/api/jobs/1',
                           ).json()
assert 'success' in response
assert response['success'] == 'OK'
response = requests.get('http://localhost:8080/api/jobs/1').json()
assert 'error' in response
assert response['error'] == 'Not found'
print('‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏')

print()
print('üìó –¢–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ')
